{"ast":null,"code":"var _jsxFileName = \"/Users/melanierogoff/Desktop/pikatetris/src/components/Tetris.js\";\nimport React, { useState } from 'react';\nimport { createStage } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport Stage from './Stage.js';\nimport Display from './Display.js';\nimport StartButton from './StartButton.js';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null); //speed based on level\n\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer] = usePlayer();\n  const [stage, setStage] = useStage(player);\n\n  const movePlayer = dir => {\n    updatePlayerPos({\n      x: dir,\n      y: 0\n    });\n  }; //Reset everything\n\n\n  const startGame = () => {\n    setStage(createStage());\n    resetPlayer();\n  };\n\n  const drop = () => {\n    updatePlayerPos({\n      x: 0,\n      y: 1,\n      collided: false\n    });\n  };\n\n  const dropPlayer = () => {\n    drop();\n  };\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        //code for left arrow on keyboard  \n        movePlayer(-1); //move left\n      } else if (keyCode === 39) {\n        //code for right arrow on keyboard\n        movePlayer(1); //move right\n      } else if (keyCode === 40) {\n        //code for down arrow\n        dropPlayer(); //move player down\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(StyledTetrisWrapper, {\n      role: \"button\",\n      tabIndex: \"0\",\n      onKeyDown: e => move(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StyledTetris, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Stage, {\n      stage: stage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"aside\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, gameOver ? /*#__PURE__*/React.createElement(Display, {\n      gameOver: gameOver,\n      text: \"Game Over!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Display, {\n      text: \"Score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Display, {\n      text: \"Rows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Display, {\n      text: \"Level\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(StartButton, {\n      callback: startGame(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }))));\n  };\n};\n\nexport default Tetris;","map":{"version":3,"sources":["/Users/melanierogoff/Desktop/pikatetris/src/components/Tetris.js"],"names":["React","useState","createStage","StyledTetrisWrapper","StyledTetris","usePlayer","useStage","Stage","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","stage","setStage","movePlayer","dir","x","y","startGame","drop","collided","dropPlayer","move","keyCode","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { createStage } from '../gameHelpers';\nimport {StyledTetrisWrapper, StyledTetris} from './styles/StyledTetris';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport Stage from './Stage.js';\nimport Display from './Display.js';\nimport StartButton from './StartButton.js';\n\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null); //speed based on level\n    const [gameOver, setGameOver] = useState(false);\n\n    const [player, updatePlayerPos, resetPlayer] = usePlayer(); \n    const [stage, setStage] = useStage(player); \n\n    const movePlayer = dir => { \n        updatePlayerPos({ \n            x: dir, \n            y: 0\n        });\n    }\n\n    //Reset everything\n    const startGame = () => {\n        setStage(createStage());\n        resetPlayer();\n    }\n\n    const drop = () => {\n        updatePlayerPos({ x: 0, y: 1, collided: false})\n    }\n\n    const dropPlayer = () => {\n        drop();\n    }\n\n    const move = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 37) { //code for left arrow on keyboard  \n                movePlayer(-1); //move left\n            } else if (keyCode === 39) { //code for right arrow on keyboard\n                movePlayer(1); //move right\n            } else if (keyCode === 40) { //code for down arrow\n                dropPlayer(); //move player down\n            }\n    }\n\n    return (\n        <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={ e=> move(e)}>\n            <StyledTetris>\n                <Stage stage={stage}/>\n                    <aside>\n                        {gameOver ? (<Display gameOver={gameOver} text=\"Game Over!\" />) : (\n                            <div>\n                                <Display text=\"Score\"/>\n                                <Display text=\"Rows\"/>\n                                <Display text=\"Level\"/>\n                            </div>\n                        )}\n        \n                        <StartButton callback={startGame()}/>\n                    </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    )\n};\n}\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}