{"ast":null,"code":"var _jsxFileName = \"/Users/melanierogoff/Desktop/pikatetris/src/components/Tetris.js\";\nimport React, { useState } from 'react';\nimport { createStage } from '../gameHelpers'; //Styled components\n\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'; //Custom Hooks\n\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage'; //Components\n\nimport Stage from './Stage.js';\nimport Display from './Display.js';\nimport StartButton from './StartButton.js';\n\nconst Tetris = () => {\n  //Creating 2 states -- drop time is the speed we modify based on llevel\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false); //Using our custom hooks here!\n\n  const [player] = usePlayer(); //destructuring here\n\n  const [stage, setStage] = useStage(player); //need our player here\n\n  console.log('re-render');\n\n  const movePlayer = dir => {\n    //move left and right\n    updatePlayerPost({\n      x: dir,\n      y: 0\n    });\n  };\n\n  const startGame = () => {\n    //Reset everything\n    setStage(createStage());\n    resetPlayer();\n  };\n\n  const drop = () => {\n    updatePlayerPos({\n      x: 0,\n      y: 1,\n      collided: false\n    });\n  };\n\n  const dropPlayer = () => {\n    drop();\n  };\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        //code for left arrow on keyboard  \n        movePlayer(-1); //move left\n      } else if (keyCode === 39) {\n        //code for right arrow on keyboard\n        movePlayer(1); //move right\n      } else if (keyCode === 40) {\n        //code for down arrow\n        dropPlayer(); //move player down\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(StyledTetrisWrapper, {\n      role: \"button\",\n      tabIndex: \"0\",\n      onKeyDown: e => move(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StyledTetris, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Stage, {\n      stage: stage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"aside\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, gameOver ? /*#__PURE__*/React.createElement(Display, {\n      gameOver: gameOver,\n      text: \"Game Over!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Display, {\n      text: \"Score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Display, {\n      text: \"Rows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Display, {\n      text: \"Level\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(StartButton, {\n      onClick: startGame(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }))));\n  };\n};\n\nexport default Tetris;","map":{"version":3,"sources":["/Users/melanierogoff/Desktop/pikatetris/src/components/Tetris.js"],"names":["React","useState","createStage","StyledTetrisWrapper","StyledTetris","usePlayer","useStage","Stage","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","stage","setStage","console","log","movePlayer","dir","updatePlayerPost","x","y","startGame","resetPlayer","drop","updatePlayerPos","collided","dropPlayer","move","keyCode","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,gBAA5B,C,CAEA;;AACA,SAAQC,mBAAR,EAA6BC,YAA7B,QAAgD,uBAAhD,C,CAEA;;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,mBAAzB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEjB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC,CAJiB,CAMjB;;AAEA,QAAM,CAACc,MAAD,IAAcV,SAAS,EAA7B,CARiB,CAQgB;;AACjC,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACS,MAAD,CAAlC,CATiB,CAS2B;;AAE5CG,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAEA,QAAMC,UAAU,GAAGC,GAAG,IAAI;AAAE;AACxBC,IAAAA,gBAAgB,CAAC;AAAEC,MAAAA,CAAC,EAAEF,GAAL;AAAUG,MAAAA,CAAC,EAAE;AAAb,KAAD,CAAhB;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACpB;AACAR,IAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACAwB,IAAAA,WAAW;AAEd,GALD;;AAOA,QAAMC,IAAI,GAAG,MAAM;AACfC,IAAAA,eAAe,CAAC;AAAEL,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAX;AAAcK,MAAAA,QAAQ,EAAE;AAAxB,KAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBH,IAAAA,IAAI;AACP,GAFD;;AAIA,QAAMI,IAAI,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AAC1B,QAAI,CAACnB,QAAL,EAAe;AACX,UAAImB,OAAO,KAAK,EAAhB,EAAoB;AAAC;AACjBZ,QAAAA,UAAU,CAAC,CAAC,CAAF,CAAV,CADgB,CACA;AACnB,OAFD,MAEO,IAAIY,OAAO,KAAK,EAAhB,EAAoB;AAAE;AACzBZ,QAAAA,UAAU,CAAC,CAAD,CAAV,CADuB,CACR;AAClB,OAFM,MAEA,IAAIY,OAAO,KAAK,EAAhB,EAAoB;AAAE;AACzBF,QAAAA,UAAU,GADa,CACT;AACjB;AACR;;AAED,wBACQ,oBAAC,mBAAD;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAmC,MAAA,QAAQ,EAAC,GAA5C;AAAgD,MAAA,SAAS,EAAGG,CAAC,IAAGF,IAAI,CAACE,CAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEjB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,QAAQ,gBACL,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAEA,QAAnB;AAA6B,MAAA,IAAI,EAAC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,gBAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAJR,eAYI,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEY,SAAS,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CAFR,CADJ,CADR;AAqBH,GAhCG;AAiCH,CAjED;;AAkEA,eAAef,MAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { createStage } from '../gameHelpers';\n\n//Styled components\nimport {StyledTetrisWrapper, StyledTetris} from './styles/StyledTetris';\n\n//Custom Hooks\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\n\n//Components\nimport Stage from './Stage.js';\nimport Display from './Display.js';\nimport StartButton from './StartButton.js';\n\nconst Tetris = () => {\n\n    //Creating 2 states -- drop time is the speed we modify based on llevel\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    //Using our custom hooks here!\n\n    const [player,  ] = usePlayer(); //destructuring here\n    const [stage, setStage] = useStage(player); //need our player here\n\n    console.log('re-render');\n\n    const movePlayer = dir => { //move left and right\n        updatePlayerPost({ x: dir, y: 0});\n    }\n\n    const startGame = () => {\n        //Reset everything\n        setStage(createStage());\n        resetPlayer();\n\n    }\n\n    const drop = () => {\n        updatePlayerPos({ x: 0, y: 1, collided: false})\n    }\n\n    const dropPlayer = () => {\n        drop();\n    }\n\n    const move = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 37) {//code for left arrow on keyboard  \n                movePlayer(-1); //move left\n            } else if (keyCode === 39) { //code for right arrow on keyboard\n                movePlayer(1); //move right\n            } else if (keyCode === 40) { //code for down arrow\n                dropPlayer(); //move player down\n            }\n    }\n\n    return (\n            <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={ e=> move(e)}>\n                <StyledTetris>\n                    <Stage stage={stage}/>\n                        <aside>\n                            {gameOver ? (\n                                <Display gameOver={gameOver} text=\"Game Over!\" />\n                            ) : (\n                                <div>\n                                    {/* aside is the sidebar */}\n                                    <Display text=\"Score\"/>\n                                    <Display text=\"Rows\"/>\n                                    <Display text=\"Level\"/>\n                                </div>\n                            )}\n        \n                            <StartButton onClick={startGame()}/>\n                        </aside>\n                </StyledTetris>\n            </StyledTetrisWrapper>\n    )\n};\n}\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}