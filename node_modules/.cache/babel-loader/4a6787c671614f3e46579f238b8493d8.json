{"ast":null,"code":"var _jsxFileName = \"/Users/melanierogoff/Desktop/pikatetris/src/components/Tetris.js\";\nimport React, { useState } from 'react';\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'; //Custom Hooks\n\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useInterval } from '../hooks/useInterval';\nimport { useGameStatus } from '../hooks/useGameStatus'; //Components\n\nimport Stage from './Stage.js';\nimport Display from './Display.js';\nimport StartButton from './StartButton.js';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null); //speed based on level\n\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rows);\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {\n      updatePlayerPos({\n        x: dir,\n        y: 0\n      });\n    }\n  }; //Reset everything\n\n\n  const startGame = () => {\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n  };\n\n  const drop = () => {\n    if (!checkCollision(player, stage, {\n      x: 0,\n      y: 1\n    })) {\n      updatePlayerPos({\n        x: 0,\n        y: 1,\n        collided: false\n      });\n    } else {\n      if (player.pos.y < 1) {\n        setGameOver(true);\n        setDropTime(null);\n      }\n\n      updatePlayerPos({\n        x: 0,\n        y: 0,\n        collided: true\n      });\n    }\n  };\n\n  const keyUp = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000);\n      }\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        //code for left arrow on keyboard  \n        movePlayer(-1); //move left\n      } else if (keyCode === 39) {\n        //code for right arrow on keyboard\n        movePlayer(1); //move right\n      } else if (keyCode === 40) {\n        //code for down arrow\n        dropPlayer(); //move player down\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n  return /*#__PURE__*/React.createElement(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    onKeyUp: keyUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledTetris, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stage, {\n    stage: stage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, gameOver ? /*#__PURE__*/React.createElement(Display, {\n    gameOver: gameOver,\n    text: \"Game Over!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Display, {\n    text: \"Score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Display, {\n    text: \"Rows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Display, {\n    text: \"Level\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(StartButton, {\n    callback: startGame(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default Tetris;","map":{"version":3,"sources":["/Users/melanierogoff/Desktop/pikatetris/src/components/Tetris.js"],"names":["React","useState","createStage","checkCollision","StyledTetrisWrapper","StyledTetris","usePlayer","useStage","useInterval","useGameStatus","Stage","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","playerRotate","stage","setStage","score","setScore","rows","setRows","level","setLevel","movePlayer","dir","x","y","startGame","drop","collided","pos","keyUp","keyCode","dropPlayer","move","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\nimport {StyledTetrisWrapper, StyledTetris} from './styles/StyledTetris';\n\n//Custom Hooks\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useInterval } from '../hooks/useInterval';\nimport { useGameStatus } from '../hooks/useGameStatus';\n//Components\nimport Stage from './Stage.js';\nimport Display from './Display.js';\nimport StartButton from './StartButton.js';\n\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null); //speed based on level\n    const [gameOver, setGameOver] = useState(false);\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer(); \n    const [stage, setStage] = useStage(player, resetPlayer); \n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rows)\n\n    const movePlayer = dir => { \n        if (!checkCollision(player, stage, { x: dir, y: 0})) {\n            updatePlayerPos({ x: dir, y: 0});\n        }\n    };\n\n    //Reset everything\n    const startGame = () => {\n        setStage(createStage());\n        setDropTime(1000);\n        resetPlayer();\n        setGameOver(false);\n    }\n\n    const drop = () => {\n        if (!checkCollision(player, stage, { x: 0, y: 1})) {\n            updatePlayerPos({ x: 0, y: 1, collided: false});\n        } else {\n            if (player.pos.y < 1) { \n                setGameOver(true);\n                setDropTime(null)\n            }\n            updatePlayerPos({ x: 0, y: 0, collided: true})\n        }\n    };\n\n    const keyUp = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 40) {\n                setDropTime(1000);\n            }\n        }\n    };\n\n    const dropPlayer = () => {\n        setDropTime(null);\n        drop();\n    };\n\n    const move = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 37) { //code for left arrow on keyboard  \n                movePlayer(-1); //move left\n            } else if (keyCode === 39) { //code for right arrow on keyboard\n                movePlayer(1); //move right\n            } else if (keyCode === 40) { //code for down arrow\n                dropPlayer(); //move player down\n            } else if (keyCode === 38) {\n                playerRotate(stage, 1);\n            }\n        }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime)\n\n    return (\n        <StyledTetrisWrapper \n            role=\"button\" \n            tabIndex=\"0\" \n            onKeyDown={e => move(e)} \n            onKeyUp={keyUp}\n        >\n            <StyledTetris>\n                <Stage stage={stage}/>\n                    <aside>\n                        {gameOver ? (<Display gameOver={gameOver} text=\"Game Over!\" />):(\n                            <div>\n                                <Display text=\"Score\"/>\n                                <Display text=\"Rows\"/>\n                                <Display text=\"Level\"/>\n                            </div>\n                        )}\n                        <StartButton callback={startGame()}/>\n                    </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    )};\n\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}